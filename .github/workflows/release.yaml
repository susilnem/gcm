name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Get version from tag
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        uses: orhun/git-cliff-action@v4
        id: changelog
        with:
          args: --latest --strip header all
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Get contributors
        id: contributors
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREV_TAG" ]; then
            RANGE="$PREV_TAG..HEAD"
          else
            RANGE="HEAD"
          fi
          CONTRIBUTORS=$(git log $RANGE --format='%an' | sort -u | sed 's/^/- /' | tr '\n' ' ' 2>/dev/null)
          echo "list=$CONTRIBUTORS" >> $GITHUB_OUTPUT 2>/dev/null || true

      - name: Build multi-platform binaries
        run: |
          mkdir -p dist
          for os in linux darwin windows; do
            for arch in amd64; do
              output="dist/gcm-${os}"
              [ "$os" = "windows" ] && output+=".exe"
              GOOS=$os GOARCH=$arch go build -ldflags="-X main.Version=${{ steps.version.outputs.version }}" -o $output ./cmd/gcm
            done
          done

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > checksums.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: v${{ steps.version.outputs.version }}
          body: |
            ${{ steps.changelog.outputs.content }}

            **Contributors:** ${{ steps.contributors.outputs.list }}
          files: |
            dist/*
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
